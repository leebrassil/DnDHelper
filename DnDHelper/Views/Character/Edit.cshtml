@model DnDHelper.Models.Character

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.CharacterName)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Class)
        @Html.HiddenFor(model => model.CharacterName)
        @Html.HiddenFor(model => model.Race)

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control", @id = "characterLevel" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="stat-block" class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control", @id = "strength"} })
                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })                
            </div>

            @Html.LabelFor(model => model.Dexterity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dexterity, new { htmlAttributes = new { @class = "form-control", @id = "dexterity" } })
                @Html.ValidationMessageFor(model => model.Dexterity, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Constitution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constitution, new { htmlAttributes = new { @class = "form-control", @id = "constitution" } })
                @Html.ValidationMessageFor(model => model.Constitution, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Intelligence, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Intelligence, new { htmlAttributes = new { @class = "form-control", @id = "intelligence" } })
                @Html.ValidationMessageFor(model => model.Intelligence, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Wisdom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wisdom, new { htmlAttributes = new { @class = "form-control", @id = "wisdom" } })
                @Html.ValidationMessageFor(model => model.Wisdom, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Charisma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Charisma, new { htmlAttributes = new { @class = "form-control", @id = "charisma" } })
                @Html.ValidationMessageFor(model => model.Charisma, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" class="btn btn-default" onclick="rollStats()" value="Roll"/>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")    
}
<script src = "../../Scripts/CharacterScript.js" type="text/javascript"></script >
